---
# tasks file for host_config
- name: Install necessary packages
  yum:
    name:
      - golang
      - git
      - gcc-c++
      - httpd
      - libstdc++
    state: present
  become: yes


- name: Download Hugo
  get_url:
    url: "https://github.com/gohugoio/hugo/releases/download/v{{hugo_version}}/{{hugo_tar_gz}}"
    dest: "{{hugo_download_location}}"
  become: yes

- name: Extract Hugo
  unarchive:
    src: "{{hugo_download_location}}"
    dest: /usr/local/bin/
    remote_src: yes
  become: yes

- name: Pull site from repo
  git:
    repo: 'https://github.com/kyleabenson/fest2020frontEnd.git'
    dest: "/home/{{admin_user}}/fest2020frontEnd"
    force: yes

- name: Add theme to hugo site
  git:
    repo: 'https://github.com/onweru/newsroom.git'
    dest: "/home/{{admin_user}}/fest2020frontEnd/themes/newsroom"

- name: Adjust config file for env
  lineinfile:
    path: "/home/{{admin_user}}/fest2020frontEnd/config.toml"
    state: absent
    regexp: '^baseurl'

- name: Retrieve text URL contents
  uri:
     url: "{{ book.text.url }}"
     return_content: yes
  register: booktext
  when: book is defined

- name: Retrieve book image
  get_url:
    url: "{{ book.image.url }} "
    dest: "{{ book.image.file}}"
  when: book is defined

- name: Create new post template
  template:
    src: ../files/post_template.md.j2
    dest: "{{ book.text.file }}"
   
- name: Build site
  command: hugo
  args:
    chdir: "/home/{{admin_user}}/fest2020frontEnd/"

- name: Place static files
  copy:
    src: "/home/{{admin_user}}/fest2020frontEnd/public/"
    dest: /var/www/html/
    remote_src: yes
    owner: root
    group: root
  become: yes

- name: Enable httpd
  service:
    name: httpd
    state: started
    enabled: yes
  become: yes

- name: Fix secontexts 
  command: restorecon -r /var/www/html/*
  become: yes

- name: Curl system ensure it's up
  uri:
    url: "http://{{inventory_hostname}}"
    status_code: 200

- debug:
    msg: "Provisioning complete, when you're ready to deprovision please rerun the playbook with args -e 'desired_state=absent gcp_host={{inventory_hostname}} --tags=cleanup'"    
  