---
# tasks file for gcp_deploy
- name: Create an ssh key when no key is defined
  openssh_keypair:
    path: "/tmp/{{admin_user}}-key"
  when: ssh_pub_key is undefined
  register: tempkey
  tags:
    - cleanup
    
- name: Create a static address
  google.cloud.gcp_compute_address:
    name: "{{ gcp_host }}-address"
    region: "{{ gcp_region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ lookup('env', 'GCP_AUTH_KIND') | default( gcp_cred_kind, True) }}"
    service_account_file: "{{ lookup('env', 'GCP_SERVICE_ACCOUNT_FILE') | default( gcp_cred_kind, True) }}"
    state: "{{ desired_state }}"
  register: address
  tags:
    - cleanup

- name: Create a host
  google.cloud.gcp_compute_instance:
    name: "{{ gcp_host }}"
    machine_type: e2-micro
    disks:
    - auto_delete: 'true'
      boot: 'true'
      device_name: device1
      initialize_params:
        disk_size_gb: "{{ disk_size_gb }}"
        source_image: "{{ gcp_source_image }}"
    network_interfaces:
    - access_configs:
      - name: External NAT
        nat_ip: "{{ address }}"
        type: ONE_TO_ONE_NAT
    metadata:
      ssh-keys: "{{admin_user}}:{{ ssh_pub_key | default(tempkey.public_key) }}" 
    zone: "{{ gcp_zone }}"
    tags: 
      items:
        - https-server
        - http-server
    auth_kind: "{{ lookup('env', 'GCP_AUTH_KIND') | default( gcp_cred_kind, True) }}"
    project: "{{ gcp_project }}"
    service_account_file: "{{ lookup('env', 'GCP_SERVICE_ACCOUNT_FILE') | default( gcp_cred_kind, True) }}"
    state: "{{ desired_state }}"
  register: instance
  tags:
    - cleanup

- name: Add created system to inventory 
  add_host:
    name: "{{instance.name}}"
    groups: webservers
    ansible_user: kyleabenson
    ansible_ssh_private_key_file: "{{ ssh_pub_key | default( '/tmp/{{admin_user}}-key', True) }}"
    ansible_host: "{{address.address}}"
  when: desired_state == "present"

- name: Waiting for 30 seconds before proceeding...
  wait_for:
    timeout: 30
  when: desired_state == "present"